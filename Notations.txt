Goals end product
Total number of votes cast
A complete list of candidates who received votes
Total number of votes each candidate received
Percentage of votes each candidate won
The winner of the election based on popular vote


-----
Pseudocode
Open the data file.
Write down the names of all the candidates.
Add a vote count for each candidate.
Get the total votes for each candidate.
Get the total votes cast for the election.


----
First code draft first steps
#import modules to read csv
#import csv
#dir(csv)

#Task Goals and sub goals
#Total number of votes cast

#1 Open the data file.
    #Full path Source from file "C:\Users\splt1\Election_Analysis\Resources\election_results.csv" 
    #file_variable = open(filename, mode)     
# Assign a variable for the file to load and the path.
#file_to_load = 'Resources/election_results.csv'
# Open the election results and read the file.
#election_data = open(file_to_load, 'r')
#with open(file_to_load) as election_data:
# To do: perform analysis.
#    print(election_data)



------
up to 3.5.3 of canvas, code running  
# Add our dependencies.
import csv
import os
# Assign a variable to load a file from a path.
file_to_load = os.path.join("Resources", "election_results.csv")
# Assign a variable to save the file to a path.
file_to_save = os.path.join("analysis", "election_analysis.txt")

# 1. Initialize a total vote counter.
total_votes = 0

#2 Write down the names of all the candidates.
#Candidate options
candidate_options = []

#1.1 Open the election results and read the file.
with open(file_to_load) as election_data:
    file_reader = csv.reader(election_data)

    # Read and print the header row.
    headers = next(file_reader)
   # test walktrhouh print(headers) test

 # Print each row in the CSV file.
    for row in file_reader:
        # 1.2 Add to the total vote count.
        total_votes += 1

# 1.3 Print the total votes.
# print(total_votes)

#2 Write down the names of all the candidates. 
# Print the candidate name from each row.
        candidate_name = row[2]

  # 2.1 v2 If the candidate does not match any existing candidate...
        if candidate_name not in candidate_options:
            # Add it to the list of candidates.
            candidate_options.append(candidate_name)       

# 2.1 Add the candidate name to the candidate list.
        #candidate_options.append(candidate_name)

#2.2 Print the candidate list.
print(candidate_options)
#3 Add a vote count for each candidate.
#4 Get the total votes for each candidate.
#5 Get the total votes cast for the election.



#goals
#A complete list of candidates who received votes
#Total number of votes each candidate received
#Percentage of votes each candidate won
#The winner of the election based on popular vote


# Close the file.
#election_data.close()